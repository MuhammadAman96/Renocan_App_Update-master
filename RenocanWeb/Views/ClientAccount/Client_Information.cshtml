
@using System.Configuration;
@model RenocanWeb.Models.Client_Signup
@*@{
        ViewBag.Title = "Client_Information";
    }*@


<body>
    <div id="dashboard">
        <div class="content">
            <div class="left">
                <div class="profile">
                    <img id="uploadedImage" src="../@Model.Image_Name" />

                    <div class="details">
                        <span class="name">
                            @Model.First_Name
                        </span>
                        <span class="city">
                           @Model.City
                        </span>
                        <div class="upload">
                                
                            <i class="fa fa-camera" id="uploadIcon" title="Upload Image"></i>
                            <input type="file" id="imageBrowes" style="display: none;"/>
                            
                            <div id="imgPreview" class="thumbnail" style="display:none">
                                <img class="img-responsive" id="targetImg"  src="../@Model.Image_Name"/>

                                <div class="caption">
                                    <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                    <span id="description"></span>
                                </div>
                                <a href="#" class="fa fa-camera" onclick="Uploadimage()">Upload</a>
                            </div>

                            <!--<button type="file" name="image" class="remove"><i class="fa fa-times-circle"></i> Remove Picture</button>-->
                            <span>.jpg .png allowed only max: 2mb</span>
                        </div>
                    </div>
                </div>


                <div class="menu">
                    <ul>
                        <li><i class="fa fa-clock-o"></i>@Html.ActionLink("Activity", "Client_activity", "ClientAccount")</li>
                        <li><i class="fa fa-comments"></i>@Html.ActionLink("My Review", "Client_review", "ClientAccount")</li>
                        <li><a href=""><i class="fa fa-user"></i> Account Information</a></li>
                        <li><i class="fa fa-building"></i>@Html.ActionLink("Change Password", "ChangePassword", "ClientAccount")</li>

                        <li><a href='@Url.Action("LogOut", "ClientAccount")'><i class="fa fa-sign-out"></i> Log Out</a></li>
                    </ul>
                </div>
            </div>

            <div class="right">
                <span class="heading"><i class="fa fa-user"></i> Account Information</span>

                <div class="accountinfo">
                    <form method="post">
                        @Html.AntiForgeryToken()
                        <span class="title">Personal Details</span>
                        @Html.HiddenFor(model => model.Client_ID)
                        @*<div class="error"><span><i class="fa fa-times"></i> Please Enter the Required Fields.</span></div>*@

                        <fieldset>
                            @Html.TextBoxFor(m => m.First_Name, new { placeholder = "First Name", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.First_Name, "", new { @class = "text-red" })

                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.Last_Name, new { placeholder = "Last Name", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.Last_Name, "", new { @class = "text-red" })
                            @* <input type="text" placeholder="Last Name">*@
                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.City, new { placeholder = "City", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-red" })
                            @*<input type="text" placeholder="City">*@
                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.State, new { placeholder = "State", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-red" })
                            @*<input type="text" placeholder="State">*@
                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-red" })
                            @*<input type="email" placeholder="Email Address">*@
                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.Phone, new { placeholder = "Phone", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-red" })
                            @*<input type="text" placeholder="Phone">*@
                        </fieldset>

                        <span class="title">Credentials Details</span>
                        <fieldset>
                            @Html.TextBoxFor(m => m.Create_Password, new { placeholder = "Create Password", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.Create_Password, "", new { @class = "text-red" })
                            @*<input type="password" placeholder="New Password">*@
                        </fieldset>
                        <fieldset>
                            @Html.TextBoxFor(m => m.Confirm_Password, new { placeholder = "Confirm Password", @maxlength = "50" })
                            @Html.ValidationMessageFor(m => m.Confirm_Password, "", new { @class = "text-red" })
                            @*<input type="password" placeholder="Confirm Password">*@
                        </fieldset>
                        <div class="newsletter">
                            @Html.CheckBoxFor(m => m.IsNewsletter) Sign up to RenoCan Newsletter.
                        </div>
                        <input type="submit" value="Save Changes" onclick="return foo();">
                        @*<div class="success"><span><i class="fa fa-check-circle"></i> Your Changes have been Updated</span></div>*@
                    
                </div>

            </div>
            @*<div>
                <div class="col-md-9">


                    <div class="col-md-4">
                        <div class="btn btn-primary">
                            <input type="file" id="imageBrowes" />
                        </div>
                        <hr />

                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-responsive" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                            <a href="#" class="btn btn-default" onclick="Uploadimage()">Upload</a>
                        </div>

                    </div>
                    <div class="col-md-2 thumbnail" id="uploadedImage">


                    </div>
                </div>
            </div>*@
        </div>



    </div>


</body>
<script>
    function foo() {
        alert("Your Changes have been Updated !");
        return true;
    }


    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;

            if (File && File[0]) {
                ReadImage(File[0]);
            }

        })

    })


    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    }

    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();

    }

    var Uploadimage = function () {

        var file = $("#imageBrowes").get(0).files;

        var data = new FormData;
        data.append("ImageFile", file[0]);


        $.ajax({

            type: "Post",
            url: "../ClientAccount/ImageUpload",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                ClearPreview();
                var url = '../' + response;

                //$("#uploadedImage").append('<img src=' + url + ' class="img-responsive thumbnail"/>');
                $("#uploadedImage").attr('src', url);


            }

        })


        //
    }
    $("#uploadIcon").click(function () {
        $("input[type='file']").trigger('click');
    });
      

</script>